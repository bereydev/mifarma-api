"""Add roles table

Revision ID: fd432fff18f2
Revises: 91a9e5a9e53a
Create Date: 2021-03-27 17:03:58.062597

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fd432fff18f2'
down_revision = '91a9e5a9e53a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.rename_table('user', 'users')
    op.add_column('users', sa.Column('role_id', sa.Integer(), nullable=True))
    op.execute("UPDATE users SET gender=3")
    op.alter_column('users', 'gender',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'users', 'roles', ['role_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.alter_column('user', 'previous_diseases',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('user', 'prescriptions',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('user', 'gender',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user', 'allergies',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.drop_column('user', 'role_id')
    op.drop_table('roles')
    # ### end Alembic commands ###
